Spring Legacy Project
1. pom.xml 변경(각종 라이브러리 버전)
	java: 11
	springframework-version : 5.3.20
	aspectj-version : 1.9.6
	slf4k-version : 2.0.9
	servlet-api -> javax.serlet-api(artifactedId)
					version : 3.1.0
	maven-compiler-plugin  configuration : 30801
		source: 11
		target: 11
	
2. Properties 변경
	Project Facets
		- Dynamic Web Module : 4.0
		- Java : 11
		- Runtime : Apache Tamcat 체크
			
3. 한글 인코딩 처리
	web.xml에 다음을 추가
	-----------------------------------------------
	<filter>
		<filter-name>encodingFilter</filter-name>
		<filter-class>org.springframework.web.filter.CharacterEncodingFilter
		</filter-class>
		<init-param>
			<param-name>encoding</param-name>
			<param-value>UTF-8</param-value>
		</init-param>
		<init-param>
			<param-name>forceEncoding</param-name>
			<param-value>true</param-value>
		</init-param>
	</filter>
	<filter-mapping>
		<filter-name>encodingFilter</filter-name>
		<url-pattern>/*</url-pattern>
	</filter-mapping>
	------------------------------------------------
	
Lombok 설치
1. lombok 다운로드 후 실행하여 개발도구(sts)에 설치
2. maven repository에서 해당 라이브러리를 복사하여 pom.xml에 추가

	lombok 활용
	1) getter와 setter 자동 생성
	2) log 출력용 라이브러리 Slf4j(Log)
	
-----------------------------------------------------

MVC 패턴
1. Controller (요청에 따른 기능의 분류)
2. Service (요청에 해당하는 기능을 제공)
3. DAO (Data Access Object, DB의  CRUD를 처리)
4. DTO (Data Transfer Object, data를 담아서 옮기는 역할을 담당
	vo (Value Object)
	entity (DB 테이블과 매칭하여 사용하는 객체)

----------------------------------------------------------

JSP(Java Server Page)
	JSP = HTML + Java
	페이지의 java 코드가 컴파일되어 하나의 클래스로 변환되어 실행.
	이 클래스를 servlet 클래스라고 함.(자바로 만들어진 웹용 클래스)

JSP 핵심요소
1. Directive(지시자)
	JSP 페이지에 대한 설정 정보를 지정할 때 사용.
	1) page : 문서의 타입(인코딩 방식), 에러페이지 지정 등
	2) taglib : jstl과 같은 태그 라이브러리를 지정할 때 사용
	3) include : 여러 페이지를 묶어서 하나의 페이지로 작성할 때
					다른 페이지를 포함시키기 위한 지시자.
	
2. El(Expression Language)
	표현언어. 벡엔드에서 보내는 데이터를 출력하기 위한 형식을 제공.
	
	형식) ${표현식}
	
	Model 객체
	Back-end -> Front-end로 데이터 전송에 사용하는 객체
		DTO와 Model의 관계
		DTO는 박스, Model은 택배차
		데이터 저장 메소드: addAttribute("key", value);
	
		ModelAndView 객체
		모델의 역할을 수항하는 겍채
		데이터와 화면을 같이 지정함.
		데이터와 출력될 jsp 파일의 이름을 함꼐 지정하는 형태.
		Model은 대중 교통, ModelAndView는 자가용.
		MpdelAndView는 객체(인스턴스)를 생성하여 사용.
		데이터 저장 메소드: addObject("key", value);
		view 지정 메소드: setViewName("jsp/html 파일명");
	
	Front-end -> Back-end 데이터 전송.
		Parameter로 전송.
		
	
	
3. JSTL(Jsp Standard Tag Library


기본 객체
	request, response, session
	
	
-----------------------------------------------------------
<%@ page language="java" contentType="text/html; charset=UTF-8"
pageEncoding="UTF-8"%>
<%@ taglib uri="http://java.sun.com/jsp/jstl/core" prefix="c" %>
<%@ page session="false" %>